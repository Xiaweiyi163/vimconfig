!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
__anon1::tags	autoload/omni/cpp/items.vim	/^                " In this case we need the tags (the patched version)$/;"	f	union:__anon1	access:public	signature:(the patched version)
classes	README	/^    -   Complete namespaces, classes, structs and union members.$/;"	v
classes	doc/omnicppcomplete.txt	/^        * Complete namespaces, classes, structs and unions$/;"	v
debug	autoload/omni/common/debug.vim	/^" Start debug, clear the debug file$/;"	v
debug	tags	/^debug	autoload\/omni\/common\/debug.vim	\/^" Start debug, clear the debug file$\/;"	v$/;"	v
enums	autoload/omni/cpp/complete.vim	/^" class, struct, union, and enums, typedefs$/;"	v	typeref:union:and
enums	tags	/^enums	autoload\/omni\/cpp\/complete.vim	\/^" class, struct, union, and enums, typedefs$\/;"	v	typeref:union:and$/;"	v	typeref:union:and
expIgnoreComments	autoload/omni/cpp/utils.vim	/^"let omni#cpp#utils#expIgnoreComments = 'match(synIDattr(synID(line("."), col("."), 1), "name"), '\\CcComment')!=-1'$/;"	v
expIgnoreComments	tags	/^expIgnoreComments	autoload\/omni\/cpp\/utils.vim	\/^"let omni#cpp#utils#expIgnoreComments = 'match(synIDattr(synID(line("."), col("."), 1), "name"), '\\\\CcComment')!=-1'$\/;"	v$/;"	v
file$	tags	/^debug	autoload\/omni\/common\/debug.vim	\/^" Start debug, clear the debug file$\/;"	v$/;"	v
format	tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
including	autoload/omni/cpp/complete.vim	/^    " Locate the start of the item, including ".", "->" and "[...]".$/;"	v
including	tags	/^including	autoload\/omni\/cpp\/complete.vim	\/^    " Locate the start of the item, including ".", "->" and "[...]".$\/;"	v$/;"	v
indentation	README	/^        instruction has bad indentation, spaces, comments or carriage returns between words$/;"	t	file:
indentation	tags	/^indentation	README	\/^        instruction has bad indentation, spaces, comments or carriage returns between words$\/;"	t	file:$/;"	v
item	tags	/^including	autoload\/omni\/cpp\/complete.vim	\/^    " Locate the start of the item, including ".", "->" and "[...]".$\/;"	v$/;"	v
keyword	autoload/omni/cpp/tokenizer.vim	/^    " The regexp to find a token, a token is a keyword, word or$/;"	v
kind	autoload/omni/cpp/items.vim	/^"   kind = itemVariable|itemCast|itemCppCast|itemTemplate|itemFunction|itemUnknown|itemThis|itemScope$/;"	v
mode	doc/omnicppcomplete.txt	/^language. In a C++ file, while in insert mode, you can use CTRL-X CTRL-O to:$/;"	v
num1	autoload/omni/common/utils.vim	/^    let num1 = eval(a:i1)$/;"	v
reCComment	autoload/omni/cpp/tokenizer.vim	/^let s:reCComment = '\\\/\\*\\|\\*\\\/'$/;"	v
spaces	README	/^        instruction has bad indentation, spaces, comments or carriage returns between words$/;"	t	file:
spaces	tags	/^indentation	README	\/^        instruction has bad indentation, spaces, comments or carriage returns between words$\/;"	t	file:$/;"	v
szCodeWithoutComments	autoload/omni/cpp/namespaces.vim	/^            let szCodeWithoutComments = substitute(omni#cpp#utils#GetCode(startPos, endPos)[:-2], '^[;{}]', '', 'g')$/;"	v
tags	autoload/omni/cpp/items.vim	/^                " In this case we need the tags (the patched version)$/;"	f	union:__anon1	access:public	signature:(the patched version)
typedefs$	tags	/^enums	autoload\/omni\/cpp\/complete.vim	\/^" class, struct, union, and enums, typedefs$\/;"	v	typeref:union:and$/;"	v	typeref:union:
words$	tags	/^indentation	README	\/^        instruction has bad indentation, spaces, comments or carriage returns between words$\/;"	t	file:$/;"	v
